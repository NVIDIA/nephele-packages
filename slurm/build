#! /usr/bin/enroot batch
#ENROOT_REMAP_ROOT=y
#ENROOT_ROOTFS_WRITABLE=y
#ENROOT_ROOTFS=${CONTAINER_NAME}

# Copyright (c) 2020, NVIDIA CORPORATION. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

mounts() {
    echo "$(dirname $0)/.. /mnt bind,x-create=dir"
}

environ() {
    echo "SHELL=/bin/bash"
    echo "DEBFULLNAME=NVIDIA CORPORATION"
    echo "DEBEMAIL=cudatools@nvidia.com"
    echo "DO_RELEASE=${DO_RELEASE-}"
    echo "LANG=C.UTF-8"
    echo "DEB_BUILD_OPTIONS='parallel=$(nproc)'"

    echo "SLURM_VERSION=${SLURM_VERSION?Missing environment variable}"
}

rc() {
    set -eux

    apt-get -y update && apt-get -y install --no-install-recommends \
        ca-certificates \
        curl            \
        devscripts      \
        dh-make         \
        equivs          \
        fakeroot        \
        gnupg2          \
        lintian         \
        lsb-release     \
        software-properties-common

    echo "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64 /" > /etc/apt/sources.list.d/cuda.list
    apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub
    apt-get -y update && apt-get -y install --no-install-recommends libnvidia-compute-450

    mkdir /usr/local/src/slurm && cd /usr/local/src/slurm

    pkgname=nvslurm
    pkgvers=${SLURM_VERSION}+nvidia

    curl -fSsL -O "https://github.com/SchedMD/slurm/archive/slurm-${SLURM_VERSION//./-}.tar.gz"
    mkdir ${pkgname}-${pkgvers}
    tar --strip-components=1 -C ${pkgname}-${pkgvers} -xf slurm-${SLURM_VERSION//./-}.tar.gz

    cd ${pkgname}-${pkgvers}
    dh_make -y -d -s -t /mnt/slurm/debian -f ../slurm-${SLURM_VERSION//./-}.tar.gz
    cp -a /mnt/slurm/debian/source /mnt/slurm/debian/patches debian
    yes | mk-build-deps -i -r

    debuild -us -uc -G -i -tc

    cd ..
    cp *.orig.tar.* *.debian.tar.* *.dsc *.deb /mnt
}
